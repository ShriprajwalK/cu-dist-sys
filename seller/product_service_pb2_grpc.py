# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import product_service_pb2 as product__service__pb2


class ProductServiceStub(object):
    """The ProductService provides operations for managing sellers and their items.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateSeller = channel.unary_unary(
                '/product.ProductService/CreateSeller',
                request_serializer=product__service__pb2.CreateSellerRequest.SerializeToString,
                response_deserializer=product__service__pb2.CreateSellerResponse.FromString,
                )
        self.GetSellerById = channel.unary_unary(
                '/product.ProductService/GetSellerById',
                request_serializer=product__service__pb2.GetSellerByIdRequest.SerializeToString,
                response_deserializer=product__service__pb2.GetSellerByIdResponse.FromString,
                )
        self.SellItem = channel.unary_unary(
                '/product.ProductService/SellItem',
                request_serializer=product__service__pb2.SellItemRequest.SerializeToString,
                response_deserializer=product__service__pb2.SellItemResponse.FromString,
                )
        self.UpdatePrice = channel.unary_unary(
                '/product.ProductService/UpdatePrice',
                request_serializer=product__service__pb2.UpdatePriceRequest.SerializeToString,
                response_deserializer=product__service__pb2.UpdatePriceResponse.FromString,
                )
        self.RemoveItem = channel.unary_unary(
                '/product.ProductService/RemoveItem',
                request_serializer=product__service__pb2.RemoveItemRequest.SerializeToString,
                response_deserializer=product__service__pb2.RemoveItemResponse.FromString,
                )
        self.GetAllItems = channel.unary_unary(
                '/product.ProductService/GetAllItems',
                request_serializer=product__service__pb2.GetAllItemsRequest.SerializeToString,
                response_deserializer=product__service__pb2.GetAllItemsResponse.FromString,
                )
        self.GetItemsForSeller = channel.unary_unary(
                '/product.ProductService/GetItemsForSeller',
                request_serializer=product__service__pb2.GetItemsForSellerRequest.SerializeToString,
                response_deserializer=product__service__pb2.GetItemsForSellerResponse.FromString,
                )
        self.GetSellerRatingById = channel.unary_unary(
                '/product.ProductService/GetSellerRatingById',
                request_serializer=product__service__pb2.GetSellerRatingByIdRequest.SerializeToString,
                response_deserializer=product__service__pb2.GetSellerRatingByIdResponse.FromString,
                )
        self.UpdateItemRating = channel.unary_unary(
                '/product.ProductService/UpdateItemRating',
                request_serializer=product__service__pb2.UpdateItemRatingRequest.SerializeToString,
                response_deserializer=product__service__pb2.UpdateItemRatingResponse.FromString,
                )
        self.UpdateSellerRating = channel.unary_unary(
                '/product.ProductService/UpdateSellerRating',
                request_serializer=product__service__pb2.UpdateSellerRatingRequest.SerializeToString,
                response_deserializer=product__service__pb2.UpdateSellerRatingResponse.FromString,
                )
        self.GetItemById = channel.unary_unary(
                '/product.ProductService/GetItemById',
                request_serializer=product__service__pb2.GetItemByIdRequest.SerializeToString,
                response_deserializer=product__service__pb2.GetItemByIdResponse.FromString,
                )
        self.GetItemPrice = channel.unary_unary(
                '/product.ProductService/GetItemPrice',
                request_serializer=product__service__pb2.GetItemPriceRequest.SerializeToString,
                response_deserializer=product__service__pb2.GetItemPriceResponse.FromString,
                )


class ProductServiceServicer(object):
    """The ProductService provides operations for managing sellers and their items.
    """

    def CreateSeller(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSellerById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItemsForSeller(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSellerRatingById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateItemRating(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSellerRating(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItemById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItemPrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateSeller': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSeller,
                    request_deserializer=product__service__pb2.CreateSellerRequest.FromString,
                    response_serializer=product__service__pb2.CreateSellerResponse.SerializeToString,
            ),
            'GetSellerById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSellerById,
                    request_deserializer=product__service__pb2.GetSellerByIdRequest.FromString,
                    response_serializer=product__service__pb2.GetSellerByIdResponse.SerializeToString,
            ),
            'SellItem': grpc.unary_unary_rpc_method_handler(
                    servicer.SellItem,
                    request_deserializer=product__service__pb2.SellItemRequest.FromString,
                    response_serializer=product__service__pb2.SellItemResponse.SerializeToString,
            ),
            'UpdatePrice': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePrice,
                    request_deserializer=product__service__pb2.UpdatePriceRequest.FromString,
                    response_serializer=product__service__pb2.UpdatePriceResponse.SerializeToString,
            ),
            'RemoveItem': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveItem,
                    request_deserializer=product__service__pb2.RemoveItemRequest.FromString,
                    response_serializer=product__service__pb2.RemoveItemResponse.SerializeToString,
            ),
            'GetAllItems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllItems,
                    request_deserializer=product__service__pb2.GetAllItemsRequest.FromString,
                    response_serializer=product__service__pb2.GetAllItemsResponse.SerializeToString,
            ),
            'GetItemsForSeller': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItemsForSeller,
                    request_deserializer=product__service__pb2.GetItemsForSellerRequest.FromString,
                    response_serializer=product__service__pb2.GetItemsForSellerResponse.SerializeToString,
            ),
            'GetSellerRatingById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSellerRatingById,
                    request_deserializer=product__service__pb2.GetSellerRatingByIdRequest.FromString,
                    response_serializer=product__service__pb2.GetSellerRatingByIdResponse.SerializeToString,
            ),
            'UpdateItemRating': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateItemRating,
                    request_deserializer=product__service__pb2.UpdateItemRatingRequest.FromString,
                    response_serializer=product__service__pb2.UpdateItemRatingResponse.SerializeToString,
            ),
            'UpdateSellerRating': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSellerRating,
                    request_deserializer=product__service__pb2.UpdateSellerRatingRequest.FromString,
                    response_serializer=product__service__pb2.UpdateSellerRatingResponse.SerializeToString,
            ),
            'GetItemById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItemById,
                    request_deserializer=product__service__pb2.GetItemByIdRequest.FromString,
                    response_serializer=product__service__pb2.GetItemByIdResponse.SerializeToString,
            ),
            'GetItemPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItemPrice,
                    request_deserializer=product__service__pb2.GetItemPriceRequest.FromString,
                    response_serializer=product__service__pb2.GetItemPriceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'product.ProductService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductService(object):
    """The ProductService provides operations for managing sellers and their items.
    """

    @staticmethod
    def CreateSeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/CreateSeller',
            product__service__pb2.CreateSellerRequest.SerializeToString,
            product__service__pb2.CreateSellerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSellerById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/GetSellerById',
            product__service__pb2.GetSellerByIdRequest.SerializeToString,
            product__service__pb2.GetSellerByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/SellItem',
            product__service__pb2.SellItemRequest.SerializeToString,
            product__service__pb2.SellItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/UpdatePrice',
            product__service__pb2.UpdatePriceRequest.SerializeToString,
            product__service__pb2.UpdatePriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/RemoveItem',
            product__service__pb2.RemoveItemRequest.SerializeToString,
            product__service__pb2.RemoveItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/GetAllItems',
            product__service__pb2.GetAllItemsRequest.SerializeToString,
            product__service__pb2.GetAllItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItemsForSeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/GetItemsForSeller',
            product__service__pb2.GetItemsForSellerRequest.SerializeToString,
            product__service__pb2.GetItemsForSellerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSellerRatingById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/GetSellerRatingById',
            product__service__pb2.GetSellerRatingByIdRequest.SerializeToString,
            product__service__pb2.GetSellerRatingByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateItemRating(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/UpdateItemRating',
            product__service__pb2.UpdateItemRatingRequest.SerializeToString,
            product__service__pb2.UpdateItemRatingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSellerRating(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/UpdateSellerRating',
            product__service__pb2.UpdateSellerRatingRequest.SerializeToString,
            product__service__pb2.UpdateSellerRatingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItemById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/GetItemById',
            product__service__pb2.GetItemByIdRequest.SerializeToString,
            product__service__pb2.GetItemByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItemPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/product.ProductService/GetItemPrice',
            product__service__pb2.GetItemPriceRequest.SerializeToString,
            product__service__pb2.GetItemPriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
